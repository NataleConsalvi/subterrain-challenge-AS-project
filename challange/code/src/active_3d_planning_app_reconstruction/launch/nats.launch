<launch>

  <!-- Voxblox arguments -->
  <arg name="voxel_size" default="0.30"/>
  <arg name="voxels_per_side" default="2"/>
  <arg name="ray_length" default="100.0"/>
  <arg name="method" default="merged"/>
  <arg name="verbose_voxblox" default="true"/>

  <!--  Planner arguments-->
  <arg name="planner_config" default="planners/example_config_nats.yaml"/>
  
  <!--  Experiment arguments -->  
  <arg name="experiment_config" default="nats_exp_config.yaml"/>
  
  

  <!-- Load experiment config -->
  <rosparam command="load" file="$(find active_3d_planning_app_reconstruction)/cfg/experiments/$(arg experiment_config)"/>

  
  <group ns="planner">
    <!-- Voxblox -->
    <node name="voxblox_node" pkg="voxblox_ros" type="esdf_server" output="screen" args="-alsologtostderr">
      <remap from="pointcloud" to="/perception/depth_camera/point_cloud_2"/>
      <param name="use_tf_transforms" value="true"/>
      <param name="world_frame" value="world" />
      <param name="sensor_frame" value="/Quadrotor/Sensors/DepthCamera" />
      <param name="publish_tsdf_map" value="true" />
      <param name="publish_esdf_map" value="true" />
      <param name="tsdf_voxel_size" value="$(arg voxel_size)" />
      <param name="tsdf_voxels_per_side" value="$(arg voxels_per_side)" />
      <param name="color_mode" value="color" />
      <param name="update_mesh_every_n_sec" value="0.5" />
      <param name="method" value="$(arg method)" />
      <param name="max_ray_length" value="$(arg ray_length)" />
      <param name="allow_clear" value="true" />
      <param name="verbose" value="$(arg verbose_voxblox)" />
    </node>
    
    <!-- Planner -->
    <node name="planner_node" pkg="active_3d_planning_app_reconstruction" type="reconstruction_planner_node" output="screen">
		  <!-- Voxblox Server -->
      <remap from="planner_node/esdf_map_in" to="voxblox_node/esdf_map_out" />
      <remap from="planner_node/tsdf_map_in" to="voxblox_node/tsdf_map_out" />
      <param name="use_tf_transforms" value="false" />
      <param name="tsdf_voxel_size" value="$(arg voxel_size)" />
      <param name="tsdf_voxels_per_side" value="$(arg voxels_per_side)" />
      <param name="update_mesh_every_n_sec" value="0.0" />   
      <param name="publish_traversable" value="false" />    
      <param name="publish_pointclouds" value="false" /> 
      <param name="world_frame" value="world" />             
    
    	<!-- General Settings -->
      <remap from="odometry" to="/current_state_est" />
      <remap from="command/trajectory" to="/desired_state" />

      <!-- Build the Planner by Configuration     -->
      <rosparam command="load" file="$(find active_3d_planning_app_reconstruction)/cfg/$(arg planner_config)"/>
    </node>    
  </group>

  <!-- RVIZ Visualization -->
  <node type="rviz" name="rviz_voxblox" pkg="rviz" args="-d $(find active_3d_planning_app_reconstruction)/cfg/experiments/experiment_visualization.rviz"/>
</launch>
